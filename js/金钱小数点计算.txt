1. parseFloat(billVo.pay + '')

不能直接转数值类型，只能转字符串，所以在转换前最好 + ''

2. 保留两位小数

parseFloat(val + '').toFixed(2); 	// 四舍五入保存

Math.floor(15.7784514000 * 100) / 100 // 输出结果为 15.77

Number(15.7784514000.toString().match(/^\d+(?:\.\d{0,2})?/)) // 输出结果为 15.77,不能用于整数如 10 必须写为10.0000


https://www.cnblogs.com/clement-jiao/p/10931672.html

Math.ceil() 是向上取整
Math.floor()是向下取整
Math.round()是四舍五入

//四舍五入  
        alert("保留2位小数：" + toDecimal(3.14159267));  
        alert("强制保留2位小数：" + toDecimal2(3.14159267));  
        alert("保留2位小数：" + toDecimal(3.14559267));  
        alert("强制保留2位小数：" + toDecimal2(3.15159267));  
        alert("保留2位小数：" + fomatFloat(3.14559267, 2));  
        alert("保留1位小数：" + fomatFloat(3.15159267, 1));  
          
        //五舍六入  
        alert("保留2位小数：" + 1000.003.toFixed(2));  
        alert("保留1位小数：" + 1000.08.toFixed(1));  
        alert("保留1位小数：" + 1000.04.toFixed(1));  
        alert("保留1位小数：" + 1000.05.toFixed(1));  
          
        //科学计数  
        alert(3.1415.toExponential(2));  
        alert(3.1455.toExponential(2));  
        alert(3.1445.toExponential(2));  
        alert(3.1465.toExponential(2));  
        alert(3.1665.toExponential(1));  
        //精确到n位，不含n位  
        alert("精确到小数点第2位" + 3.1415.toPrecision(2));  
        alert("精确到小数点第3位" + 3.1465.toPrecision(3));  
        alert("精确到小数点第2位" + 3.1415.toPrecision(2));  
        alert("精确到小数点第2位" + 3.1455.toPrecision(2));  
        alert("精确到小数点第5位" + 3.141592679287.toPrecision(5));  